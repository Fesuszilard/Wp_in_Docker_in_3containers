version: '3.3'

services:
  db:
    image: mysql:5.7
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: wordpress
      MYSQL_DATABASE: wordpress
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASS}
  wp1:
    image: wordpress:5.6
    ports:
      - "8080:80"
    restart: always
    environment:
      WORDPRESS_DB_HOST: ${DB_IP}:3306
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_CONFIG_EXTRA: |-
        define('WP_HOME', 'http://localhost:8080');
        define('WP_SITEURL', 'http://localhost:8080');
    volumes:
     - wp1_data:/var/www/html
  wp2:
    image: wordpress:5.6
    ports:
      - "8081:80"
    restart: always
    environment:
      WORDPRESS_DB_HOST: ${DB_IP}:3306
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
      WORDPRESS_CONFIG_EXTRA: |-
        define('WP_HOME', 'http://localhost:8081');
        define('WP_SITEURL', 'http://localhost:8081');
    volumes:
      - wp2_data:/var/www/html
  wp-cli:
    depends_on:
      - db
      - wp1
    image: wordpress:cli-2.4
    # vstm: This is required to run wordpress-cli with the same
    # user-id as wordpress. This way there are no permission problems
    # when running the cli    
    user: xfs
    # vstm: The sleep 10 is required so that the command is run after
    # mysql is initialized. Depending on your machine this might take
    # longer or it can go faster.
    command: >
      /bin/sh -c '
      sleep 10;
      wp core install --path="/var/www/html" --url="http://localhost:8080" --title="Local Wordpress By Docker" --admin_user=szilard --admin_password=password --admin_email=szilard@szilard.hu --skip-email
      '
       # vstm: add shared volume
    volumes:
      - wp1_data:/var/www/html

volumes:
    db_data:
    wp1_data:
    wp2_data:

